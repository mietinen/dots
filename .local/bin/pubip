#!/usr/bin/env bash

# hosts to use, must return plain ip address
hosts=(
    https://icanhazip.com
    https://ip.tyk.nu
    https://ipof.in/txt
    https://ident.me
    https://l2.io/ip
    https://eth0.me
    https://whatismyip.akamai.com
    https://ifconfig.me
    https://ipecho.net/plain
    https://wgetip.com
    https://ipinfo.io/ip
    https://api.ipify.org
)

# Logfile
logfile="${XDG_STATE_HOME:-$HOME/.local/state}/pubip/log"
if [ ! -f "$logfile" ]; then
    mkdir -p "${logfile%/*}"
    touch "$logfile"
fi

# Get public IP address
pub_update() {
    for h in $(shuf -e "${hosts[@]}"); do
        pubip="$(curl -Lks4 --connect-timeout 5 "$h")"
        # ipv4: ^([0-9]{1,3}\.){3}[0-9]{1,3}$
        # ipv6: ^([0-9a-f]{0,4}:){1,7}[0-9a-f]{1,4}$
        # both: ^(([0-9a-f]{0,4}:){1,7}[0-9a-f]{1,4}|([0-9]{1,3}\.){3}[0-9]{1,3})$
        if [ "$(echo "$pubip" | grep -Ec '^([0-9]{1,3}\.){3}[0-9]{1,3}$')" -eq 1 ]; then
            # Log public IP if changed
            tail -n 1 "$logfile" | grep -q "$pubip" || echo "$pubip $(date +%F-%R)" >> "$logfile"
            break
        fi
    done
}

# Return last IP only
pub_last() {
    tail -n 1 "$logfile" 2>/dev/null | cut -d' ' -f1
}

# Print table with 10 last ip adresses
pub_print() {
    pub_update
    echo "Last public IP addresses:"
    echo
    (echo "IP Time" ; tail "$logfile") | column -t
    echo
    echo "Current public IP address: $(pub_last)"
}

case "$1" in
    "-update") pub_update ;;
    "-last") pub_last ;;
    *) pub_print
esac
