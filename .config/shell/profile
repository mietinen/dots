#!/bin/sh

# ------------------------------------------------------------------------------
# Default programs
# ------------------------------------------------------------------------------
export EDITOR="nvim"
export VISUAL="nvim"
export TERMINAL="alacritty"
export BROWSER="firefox"

# ------------------------------------------------------------------------------
# Misc env exports and ~/ clean-up
# ------------------------------------------------------------------------------
export XINITRC="${XDG_CONFIG_HOME:-$HOME/.config}/desktop/xinitrc"
export XCURSOR_SIZE="16"
export ZDOTDIR="${XDG_CONFIG_HOME:-$HOME/.config}/shell"
export GTK2_RC_FILES="${XDG_CONFIG_HOME:-$HOME/.config}/gtk-2.0/gtkrc"
export TMUX_TMPDIR="$XDG_RUNTIME_DIR"
export GOPATH="${XDG_DATA_HOME:-$HOME/.local/share}/go"
export ZK_NOTEBOOK_DIR="${XDG_DOCUMENTS_DIR:-$HOME/Documents}/notes"
export LESSHISTFILE="-"
export LS_COLORS="ow=30;42" # fix unreadable blue on green
export LIBVIRT_DEFAULT_URI="qemu:///system"
export QT_QPA_PLATFORMTHEME="gtk2"
export QT_AUTO_SCREEN_SCALE_FACTOR=0
export JDK_JAVA_OPTIONS="-Dawt.useSystemAAFontSettings=on -Dswing.aatext=true -Dswing.defaultlaf=com.sun.java.swing.plaf.gtk.GTKLookAndFeel"

# ------------------------------------------------------------------------------
# $PATH
# ------------------------------------------------------------------------------
add_path() {
    test -d "$1" || return
    echo ":$PATH:" | grep -q ":$1:" && return
    export PATH="$1${PATH:+":${PATH}"}"
}
add_path "$GOPATH/bin"
add_path "$HOME/.local/bin"
unset -f add_path

# ------------------------------------------------------------------------------
# SSH AGENT
# ------------------------------------------------------------------------------
if [ -z "$SSH_AUTH_SOCK" ] || [ "$(ssh-add -l >/dev/null 2>&1; echo $?)" -eq 2 ]; then
    if [ -n "$WAYLAND_DISPLAY$DISPLAY" ] && command -v gnome-keyring-daemon >/dev/null; then
        eval $(gnome-keyring-daemon --start) >/dev/null
        export SSH_AUTH_SOCK
    elif [ -t 0 ] && command -v ssh-agent >/dev/null; then
        eval $(ssh-agent -s) >/dev/null
        trap 'kill $SSH_AGENT_PID' EXIT
    fi
fi

# ------------------------------------------------------------------------------
# Source bashrc
# ------------------------------------------------------------------------------
[ "$BASH" ] && . "${XDG_CONFIG_HOME:-$HOME/.config}/shell/bashrc" 2>/dev/null
